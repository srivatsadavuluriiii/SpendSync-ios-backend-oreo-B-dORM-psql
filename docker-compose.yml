version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:5.0
    container_name: spendsync-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=spendsync
      - MONGO_INITDB_ROOT_PASSWORD=spendsyncdev
    networks:
      - spendsync-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./docker/api-gateway/Dockerfile
    container_name: spendsync-api-gateway
    ports:
      - "3000:3000"
      - "9229:9229"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - USER_SERVICE_URL=http://user-service:3001
      - EXPENSE_SERVICE_URL=http://expense-service:3002
      - SETTLEMENT_SERVICE_URL=http://settlement-service:3003
      - NOTIFICATION_SERVICE_URL=http://notification-service:3004
      - ANALYTICS_SERVICE_URL=http://analytics-service:3005
      - PAYMENT_SERVICE_URL=http://payment-service:3006
      - JWT_SECRET=spendsync-secret-key-dev
      - CORS_ORIGIN=*
    volumes:
      - .:/app
      - /app/node_modules
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spendsync-network
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy

  # User Service
  user-service:
    build:
      context: .
      dockerfile: ./docker/user-service/Dockerfile
    container_name: spendsync-user-service
    ports:
      - "3001:3001"
      - "9230:9229"  # Debug port
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://spendsync:spendsyncdev@mongodb:27017/spendsync_users
      - JWT_SECRET=spendsync-secret-key-dev
    volumes:
      - .:/app
      - /app/node_modules
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - spendsync-network

  # Expense Service
  expense-service:
    build:
      context: .
      dockerfile: ./docker/expense-service/Dockerfile
    container_name: spendsync-expense-service
    ports:
      - "3002:3002"
      - "9231:9229"  # Debug port
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URI=mongodb://spendsync:spendsyncdev@mongodb:27017/spendsync_expenses
      - USER_SERVICE_URL=http://user-service:3001
      - NOTIFICATION_SERVICE_URL=http://notification-service:3004
    volumes:
      - .:/app
      - /app/node_modules
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - mongodb
      - user-service
    networks:
      - spendsync-network

  # Settlement Service
  settlement-service:
    build:
      context: .
      dockerfile: ./docker/settlement-service/Dockerfile
    container_name: spendsync-settlement-service
    ports:
      - "3003:3003"
      - "9232:9229"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - MONGODB_URI=mongodb://spendsync:spendsyncdev@mongodb:27017/spendsync_settlements
      - EXPENSE_SERVICE_URL=http://expense-service:3002
      - USER_SERVICE_URL=http://user-service:3001
      - PAYMENT_SERVICE_URL=http://payment-service:3006
    volumes:
      - .:/app
      - /app/node_modules
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spendsync-network
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: ./docker/notification-service/Dockerfile
    container_name: spendsync-notification-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - MONGODB_URI=mongodb://spendsync:spendsyncdev@mongodb:27017/spendsync_notifications
      - USER_SERVICE_URL=http://user-service:3001
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - EMAIL_SECURE=false
    volumes:
      - ./src/services/notification-service/src:/app/src
    depends_on:
      - mongodb
      - mailhog
    networks:
      - spendsync-network

  # Analytics Service
  analytics-service:
    build:
      context: .
      dockerfile: ./docker/analytics-service/Dockerfile
    container_name: spendsync-analytics-service
    ports:
      - "3005:3005"
      - "9234:9229"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - MONGODB_URI=mongodb://spendsync:spendsyncdev@mongodb:27017/spendsync_analytics
      - USER_SERVICE_URL=http://user-service:3001
      - EXPENSE_SERVICE_URL=http://expense-service:3002
    volumes:
      - .:/app
      - /app/node_modules
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spendsync-network
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy

  # Payment Service
  payment-service:
    build:
      context: .
      dockerfile: ./docker/payment-service/Dockerfile
    container_name: spendsync-payment-service
    ports:
      - "3006:3006"
      - "9235:9229"
    environment:
      - NODE_ENV=development
      - PORT=3006
      - MONGODB_URI=mongodb://spendsync:spendsyncdev@mongodb:27017/spendsync_payments
      - STRIPE_SECRET_KEY=your_stripe_secret_key_here
      - STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret_here
      - SETTLEMENT_SERVICE_URL=http://settlement-service:3003
      - NOTIFICATION_SERVICE_URL=http://notification-service:3004
      - METRICS_ENABLED=true
    volumes:
      - .:/app
      - /app/node_modules
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spendsync-network
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy

  # Mail testing service
  mailhog:
    image: mailhog/mailhog
    container_name: spendsync-mailhog
    ports:
      - "8025:8025" # Web UI
      - "1025:1025" # SMTP server
    networks:
      - spendsync-network

volumes:
  mongodb_data:

networks:
  spendsync-network:
    driver: bridge 