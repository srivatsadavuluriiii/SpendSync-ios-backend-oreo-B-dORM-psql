name: Release

on:
  release:
    types: [published]

jobs:
  build-and-publish:
    name: Build and Publish Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push API Gateway
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/api-gateway/Dockerfile
          push: true
          tags: |
            spendsync/api-gateway:latest
            spendsync/api-gateway:${{ steps.get_version.outputs.VERSION }}
          build-args: |
            VERSION=${{ steps.get_version.outputs.VERSION }}

      - name: Build and push User Service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/user-service/Dockerfile
          push: true
          tags: |
            spendsync/user-service:latest
            spendsync/user-service:${{ steps.get_version.outputs.VERSION }}
          build-args: |
            VERSION=${{ steps.get_version.outputs.VERSION }}

      - name: Build and push Expense Service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/expense-service/Dockerfile
          push: true
          tags: |
            spendsync/expense-service:latest
            spendsync/expense-service:${{ steps.get_version.outputs.VERSION }}
          build-args: |
            VERSION=${{ steps.get_version.outputs.VERSION }}

      - name: Build and push Settlement Service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/settlement-service/Dockerfile
          push: true
          tags: |
            spendsync/settlement-service:latest
            spendsync/settlement-service:${{ steps.get_version.outputs.VERSION }}
          build-args: |
            VERSION=${{ steps.get_version.outputs.VERSION }}

      - name: Build and push Notification Service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/notification-service/Dockerfile
          push: true
          tags: |
            spendsync/notification-service:latest
            spendsync/notification-service:${{ steps.get_version.outputs.VERSION }}
          build-args: |
            VERSION=${{ steps.get_version.outputs.VERSION }}

      - name: Create production deployment artifacts
        run: |
          mkdir -p release
          cp docker-compose.dev.yml release/docker-compose.yml
          cp .github/env.dev.example release/.env.example
          sed -i 's/\${TAG:-develop}/latest/g' release/docker-compose.yml
          zip -r spendsync-${{ steps.get_version.outputs.VERSION }}.zip release/

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: spendsync-${{ steps.get_version.outputs.VERSION }}.zip
          token: ${{ secrets.GITHUB_TOKEN }} 